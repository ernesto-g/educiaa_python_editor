<?xml version="1.0"?>
<snippets>

    <snippet name="Python. String to number"><![CDATA[#String to number example
# String variables
s1= "7"
s2 = "3.14"

#s1 to Integer
sInt = int(s1)
print(sInt)

#s2 to Float
sFloat = float(s2)
print(sFloat)		
#___________]]></snippet>

    <snippet name="Python. Number to String"><![CDATA[#Number to String example
# Integer variable
n = 5
#n to String
nString = str(n)
print(nString)		
#___________]]></snippet>

    <snippet name="Python. String concatenation"><![CDATA[#String concatenation example
s1= "1"
s2 = 3.14
s3 = "PI"
msg = s1+")"+" "+s3+" is:"+str(s2)
print(msg)		
#___________]]></snippet>
	
    <snippet name="Python. For Loop Example"><![CDATA[#For loop example
for i in range(0,5):
    print("Hello world "+str(i))		
#___________]]></snippet>

    <snippet name="Python. While Loop Example"><![CDATA[#While loop example
i=0
while i<5:
    print("Hello world "+str(i))
    i=i+1		
#___________]]></snippet>

    <snippet name="Python. If/Else Example"><![CDATA[#If/Else example
flag = True
if(flag):
    print("Flag is True")
else:
    print("Flag is False")
#___________]]></snippet>

    <snippet name="Python. Bytearray Example"><![CDATA[#Bytearray example
data = bytearray()
data.append(0x11)
data.append(0x22)
print(data[0])
print(data[1])
#___________]]></snippet>

    <snippet name="Python. List Example"><![CDATA[#List example
l = []
l.append(10)
l.append(20)
l[1]=5
for d in l:
    print(d)
#___________]]></snippet>

    <snippet name="Python. Dictionary Example"><![CDATA[#Dictionary example
d= {}
d["k1"] = "hello"
d["k2"] = 3.14

for k in d:
    print(d[k])
#___________]]></snippet>
	
    <snippet name="Hardware. LED Example"><![CDATA[#LED Example
import pyb
led1 = pyb.LED(1)
while True:
    led1.on()
    pyb.delay(1000)
    led1.off()
    pyb.delay(1000)  		
#___________]]></snippet>

    <snippet name="Hardware. LED RGB Example"><![CDATA[#LED RGB Example
import pyb
ledRed = pyb.LED(4)
while True:
    for i in range(0,16):
        ledRed.intensity(i)
        pyb.delay(100)   		 		
#___________]]></snippet>

    <snippet name="Hardware. Switch Example"><![CDATA[#Switch Example
import pyb
switch1 = pyb.Switch(1)
val = switch1.switch()
print('sw1:'+str(val))		
#___________]]></snippet>

    <snippet name="Hardware. Switch with callbacks Example"><![CDATA[#Switch with callbacks Example
import pyb
  
def func(sw):
    print("sw pressed!")
    print(sw)

switch1 = pyb.Switch(1)
switch1.callback(func)
while True:
    pyb.delay(1000)		
#___________]]></snippet>

    <snippet name="Hardware. PIN Example"><![CDATA[#PIN Example
import pyb

p = pyb.Pin(0) #GPIO0
p.init(pyb.Pin.OUT_PP,pyb.Pin.PULL_NONE)
print(p)

while True:
        p.high()
        print("value:"+str(p.value()))
        pyb.delay(1000)
        p.low()
        print("value:"+str(p.value()))
        pyb.delay(1000)		
#___________]]></snippet>

    <snippet name="Hardware. PIN Interrupt Example"><![CDATA[#PIN Interrupt Example
import pyb

def callBack(line):
        print("Pin Interrupt!")
        print("Line = ",line)

p = pyb.Pin(8)
p.init(pyb.Pin.OUT_PP,pyb.Pin.PULL_NONE)
print(p)

int = pyb.ExtInt(p,pyb.ExtInt.IRQ_RISING,pyb.Pin.PULL_NONE,callBack)
print(int)

while True:
        pyb.delay(1000)
        print("tick")
#___________]]></snippet>

    <snippet name="Hardware. UART-RS485 Example"><![CDATA[#UART-RS485 Example
import pyb
uart = pyb.UART(0)
uart.init(115200,bits=8, parity=None, stop=1,timeout=1000, timeout_char=1000, read_buf_len=64)
uart.write("Hello world")
while True:
        if uart.any():
                print("data:")
                data = uart.readall()
                print(data)	
#___________]]></snippet>

    <snippet name="Hardware. DAC Example: sine output"><![CDATA[#DAC Example: sine output
import pyb
import math

dac = pyb.DAC(1)

# sine
buf = bytearray(200) #100 samples. 2 bytes per sample
j=0
for i in range (0,len(buf)/2):
        v = 512 + int(511 * math.sin(2 * math.pi * i / (len(buf)/2) ) )
        buf[j+1] = (v >>  8) & 0xff
        buf[j] = v & 0xff
        j=j+2

# output the sine-wave at 400Hz
print("sine created")

dac.write_timed(buf, 400*(int(len(buf)/2)), mode=pyb.DAC.CIRCULAR)

while True:
        pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. Timer Example"><![CDATA[#Timer Example
import pyb

def callb(timer):
      print("Interval interrupt")
      print(timer)

def callbTimeout (timer):
      print("Timeout interrupt")
      print(timer)

print("Test Timers")

t1 = pyb.Timer(1)
t2 = pyb.Timer(2)
t1.interval(2000,callb)
t2.timeout(5000,callbTimeout)

while True:
        pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. PWM Example"><![CDATA[#PWM Example
import pyb

pyb.PWM.set_frequency(1000)

out0 = pyb.PWM(0)
out0.duty_cycle(50) # 50%
print("Duty cycle :"+str(out0.duty_cycle()))

out1= pyb.PWM(1)
out1.duty_cycle(25)

out10= pyb.PWM(10)
out10.duty_cycle(75)

while True:
        pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. ADC Example"><![CDATA[#ADC Example
import pyb

channel1 = pyb.ADC(1)
channel2 = pyb.ADC(2)
channel3 = pyb.ADC(3)

while True:
        v1 = channel1.read()
        v2 = channel2.read()
        v3 = channel3.read()
        print("value ch1:"+str(v1))
        print("value ch2:"+str(v2))
        print("value ch3:"+str(v3))
        pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. Matrix Keyboard Example"><![CDATA[#Matrix Keyboard Example
import pyb

keyboard = pyb.Keyboard(4,4) #4 rows, 4 columns
print(keyboard)

while True:
    key = keyboard.get_char()
    print("key:"+str(key))
#___________]]></snippet>

    <snippet name="Hardware. LCD HD44780U Example"><![CDATA[#LCD HD44780U Example
import pyb

lcd = pyb.LCD(2,0) # 2 lines, dot format:5x8
lcd.clear()

lcd.write("Test LCD\nEDUCIAA")
pyb.delay(1000)

lcd.clear()
lcd.config_cursor(True,True) #Cursor ON, Blink ON

c=0
while(True):
    c=c+1   
    lcd.goto_xy(0,0)
    lcd.write("counter:"+str(c))
    lcd.goto_xy(10,1)
    lcd.write(str(c))
    pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. Internal EEPROM Example"><![CDATA[#Internal EEPROM Example
import pyb
eeprom = pyb.EEPROM()
eeprom.write_byte(0x0000,0x27)
val = eeprom.read_byte(0x0000)
print(hex(val))
#___________]]></snippet>

    <snippet name="Hardware. SPI Master Example"><![CDATA[#SPI Master Example
import pyb

spi = pyb.SPI(8,0,10000)

dataTx = bytearray()
dataTx.append(0x55)
dataTx.append(0x55)
spi.write(dataTx)

dataRx = spi.read(5)
print("received:")
print(dataRx)
#___________]]></snippet>

    <snippet name="Hardware. RTC Example"><![CDATA[#RTC Example
import pyb
rtc = pyb.RTC()

# (year, month, day, weekday, hours, minutes, seconds)
newDt = [2015,12,31,0,23,59,55]
rtc.datetime(newDt)

while True:
    now = rtc.datetime()
    print(now)   
    pyb.delay(1000)
#___________]]></snippet>

    <snippet name="Hardware. Backup Registers Example"><![CDATA[#Backup Registers Example
import pyb
rtc = pyb.RTC()

rtc.write_bkp_reg(0,27)
print(rtc.read_bkp_reg(0))
#___________]]></snippet>

    <snippet name="Hardware. I2C Master Example"><![CDATA[#I2C Master Example
import pyb
print("Test I2C with AT24C04")

i2c = pyb.I2C(100000) #100Khz
i2c.slave_addr(0x50)

def writeByte(addr,value):
    data = bytearray()
    data.append(addr)
    data.append(value)
    i2c.write(data)


def readBytes(addr,size):
    data = bytearray()
    data.append(addr)    
    i2c.write(data)    
    return i2c.read(size)

writeByte(0x00,11)
pyb.delay(10)
writeByte(0x01,22)
pyb.delay(10)
writeByte(0x02,33)
pyb.delay(10)


data = readBytes(0x00,16)
print("[0]:"+str(data[0]))
print("[1]:"+str(data[1]))
print("[2]:"+str(data[2]))
#___________]]></snippet>

    <snippet name="Software. utime Module"><![CDATA[#utime Example
import pyb
import utime

print("utime Test")

rtc = pyb.RTC()
newDt = [2015,12,31,0,23,59,55]
rtc.datetime(newDt)
while True:
    now = rtc.datetime()
    print(now)

    ts = utime.time()
    print("timestamp:"+str(ts))
    dateTimeTuple = utime.localtime(ts)
    print(dateTimeTuple)
    ts = utime.mktime(dateTimeTuple)
    print("mktime timestamp:"+str(ts))
    print("__________________________")

    utime.sleep(1)

#___________]]></snippet>

    <snippet name="Software. ModBus Module (Master)"><![CDATA[#ModBus Master Example
import pyb
import ModBus

uart = pyb.UART(3)
uart.init(115200)

instrument = ModBus.Instrument(uart,0x55,mode=ModBus.MODE_ASCII)
print(instrument)

while True:
    try:
        v = instrument.read_register(1)
        print("Register 1 value :"+str(v))
    except Exception as e:
        print(e)
    pyb.delay(1000)

#___________]]></snippet>

    <snippet name="Software. ModBus Module (Slave)"><![CDATA[#ModBus Slave Example
import pyb
import ModBus

uart = pyb.UART(3)
uart.init(115200)
led1 = pyb.LED(1)

mappedRegs = {0x4000 : 0x0000 , 0x4001 : 0x0000}

modbus = ModBus.Slave(uart,0x55,mappedRegs,mode=ModBus.MODE_ASCII)
print(modbus)

print(mappedRegs)

while True:
    if modbus.receive():
        print(mappedRegs)
        if mappedRegs[0x4000]==0:
            led1.off()
        else:
            led1.on() 

#___________]]></snippet>

    <snippet name="Software. Random numbers"><![CDATA[#Random numbers Example
import uos

r = uos.urandom(1) # 1 byte range
print(r)

#___________]]></snippet>

    <snippet name="Software. JSON"><![CDATA[#JSON encode/decode Example
import json

dic = dict()
dic["k1"] = "Hello"
dic["k2"] = 27
dic["k3"] = True

s = json.dumps(dic) # dict to string
print(s)

dic2 = json.loads(s) # string to dict
print(dic2)

#___________]]></snippet>

</snippets>
